---
- name: Enable jammy repositories
  ansible.builtin.apt_repository:
    repo: "{{ item.repo }}" # We must use jammy repos to install amneziawg kernel module
    state: present
    update_cache: true
  loop:
    - repo: ppa:amnezia/ppa
    - repo: deb https://ppa.launchpadcontent.net/amnezia/ppa/ubuntu jammy main
    - repo: deb-src https://ppa.launchpadcontent.net/amnezia/ppa/ubuntu jammy main
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://security.ubuntu.com/ubuntu jammy-security main restricted
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://security.ubuntu.com/ubuntu jammy-security universe
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://security.ubuntu.com/ubuntu jammy-security multiverse
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy main restricted
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy universe
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy multiverse
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy-updates main restricted
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy-updates universe
    - repo: |
        deb-src [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy-updates multiverse
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://security.ubuntu.com/ubuntu jammy-security main restricted
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://security.ubuntu.com/ubuntu jammy-security universe
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://security.ubuntu.com/ubuntu jammy-security multiverse
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy main restricted
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy universe
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy multiverse
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy-updates main restricted
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy-updates universe
    - repo: |
        deb [signed-by=/usr/share/keyrings/ubuntu-archive-keyring.gpg]
        http://archive.ubuntu.com/ubuntu jammy-updates multiverse

- name: Install prerequesties
  ansible.builtin.apt:
    name:
      - wireguard-tools
      - amneziawg/jammy
      - resolvconf
    state: present

- name: Ensure net.ipv4.ip_forward is enabled
  ansible.builtin.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: true

- name: Copy file awg.conf
  ansible.builtin.copy:
    dest: /etc/amnezia/amneziawg/awg.conf
    content: "{{ vault_awg_content }}"
    owner: root
    group: root
    mode: '0600'
  notify:
    - Restart awg interface

- name: Check if awg interface exists
  ansible.builtin.command: ip link show awg
  register: awg_interface
  ignore_errors: true
  changed_when: false

- name: Enable awg-quick@awg service
  ansible.builtin.systemd:
    name: awg-quick@awg
    enabled: true
    state: started
  when: awg_interface.failed

- name: Create WireGuard configuration directory
  ansible.builtin.file:
    path: "/etc/wireguard"
    state: directory
    mode: '0755'

- name: Copy file wg0.conf
  ansible.builtin.copy:
    dest: /etc/wireguard/wg0.conf
    content: "{{ vault_wg_content }}"
    owner: root
    group: root
    mode: '0600'
  notify:
    - Restart wg0 interface

- name: Check if wg0 interface exists
  ansible.builtin.command: ip link show wg0
  register: wg_interface
  ignore_errors: true
  changed_when: false

- name: Enable wg-quick@wg0 service
  ansible.builtin.systemd:
    name: wg-quick@wg0
    enabled: true
    state: started
  when: wg_interface.failed
